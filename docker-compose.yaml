version: "3.9"


services:
    kafka:
      image: bitnami/kafka:3.7
      container_name: kafka
      ports:
        - "${KAFKA_PORT_EXT}:${KAFKA_PORT_EXT}"
      environment:
        - KAFKA_CFG_NODE_ID=1
        - KAFKA_CFG_PROCESS_ROLES=broker,controller
        - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
        - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
        - KAFKA_CFG_LISTENERS=PLAINTEXT://:${KAFKA_PORT},CONTROLLER://:9093,EXTERNAL://:${KAFKA_PORT_EXT}
        - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://${KAFKA_INTERNAL},EXTERNAL://${KAFKA_EXTERNAL}
        - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
        - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
        - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
        - ALLOW_PLAINTEXT_LISTENER=yes
      volumes:
        - kafka_data:/bitnami/kafka
      healthcheck:
        test: ["CMD-SHELL", "bash -c '/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server ${KAFKA_INTERNAL} --list >/dev/null 2>&1'"]
        interval: 5s
        timeout: 5s
        retries: 30
    # postgres:
    #   image: postgres:15
    #   container_name: postgres
    #   ports:
    #     - "${POSTGRES_PORT_EXTERNAL}:${POSTGRES_PORT_INTERNAL}"
    #   environment:
    #     POSTGRES_USER: demo_user
    #     POSTGRES_PASSWORD: demo_pass
    #     POSTGRES_DB: demo_db
    #   volumes:
    #     - ./initdb:/docker-entrypoint-initdb.d
    #     - pg_data:/var/lib/postgresql/data
    kafka-ui:
      image: provectuslabs/kafka-ui:latest
      container_name: kafka-ui
      ports:
        - "8080:8080"
      depends_on:
        kafka:
          condition: service_healthy
      environment:
        - KAFKA_CLUSTERS_0_NAME=local
        - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
        - DYNAMIC_CONFIG_ENABLED=true
volumes:
  kafka_data:
  pg_data: